#macro XOR %register, %register, %register, %register
#comment begin xor %0, %1, %2, %3: %__macro_id, %__macro_no, %__macro_head
#comment %0 xor %1, %2 & %3 are temporary
CPY %1, %3
CPY %2, %4
NOT %3
NOT %4
AND %1, %4
AND %3, %2
OR %1, %3
#comment end xor
#endmacro


#macro NAND %register, %register
#comment begin nand
AND %1, %2
NOT %1
#comment end nand
#endmacro


#macro NOR %register, %register
#comment begin nor
OR %1, %2
NOT %1
#comment end nor
#endmacro

#macro ADD %registerpointer, %registerpointer
DYNADD %1, %2
#endmacro
#macro ADD %registerpointer, %register
DYNADDA %1, %2
#endmacro
#macro ADD %register, %registerpointer
DYNADDB %1, %2
#endmacro

#macro SUB %registerpointer, %registerpointer
DYNSUB %1, %2
#endmacro
#macro SUB %registerpointer, %register
DYNSUBA %1, %2
#endmacro
#macro SUB %register, %registerpointer
DYNSUBB %1, %2
#endmacro

#macro DIV %registerpointer, %registerpointer
DYNDIV %1, %2
#endmacro
#macro DIV %registerpointer, %register
DYNDIVA %1, %2
#endmacro
#macro DIV %register, %registerpointer
DYNDIVB %1, %2
#endmacro

#macro MULT %registerpointer, %registerpointer
DYNMULT %1, %2
#endmacro
#macro MULT %registerpointer, %register
DYNMULTA %1, %2
#endmacro
#macro MULT %register, %registerpointer
DYNMULTB %1, %2
#endmacro

#macro INC %registerpointer
DYNINC %1
#endmacro

#macro DEC %registerpointer
DYNDEC %1
#endmacro

#macro CMP %registerpointer, %registerpointer
DYNCMP %1, %2
#endmacro
#macro CMP %registerpointer, %register
DYNCMPA %1, %2
#endmacro
#macro CMP %register, %registerpointer
DYNCMPB %1, %2
#endmacro

#macro PUSH %registerpointer
DYNPUSH %1
#endmacro

#macro POP %registerpointer
DYNPOP %1
#endmacro

#macro CPY %registerpointer, %registerpointer
DYNCPY %1, %2
#endmacro
#macro CPY %registerpointer, %register
DYNCPYA %1, %2
#endmacro
#macro CPY %register, %registerpointer
DYNCPYB %1, %2
#endmacro

#macro LOAD %registerpointer, %number
DYNLOAD %1, %2
#endmacro

#macro MCPY %memorypointer, %memorypointer
DYNMCPY %1, %2
#endmacro
#macro MCPY %memorypointer, %address
DYNMCPYA %1, %2
#endmacro
#macro MCPY %address, %memorypointer
DYNMCPYB %1, %2
#endmacro
#macro MCPY %variablepointer, %variablepointer
DYNMCPY %1, %2
#endmacro
#macro MCPY %variablepointer, %address
DYNMCPYA %1, %2
#endmacro
#macro MCPY %address, %variablepointer
DYNMCPYB %1, %2
#endmacro

#macro MLOAD %memorypointer, %number
DYNMLOAD %1, %2
#endmacro
#macro MLOAD %variablepointer, %number
DYNMLOAD %1, %2
#endmacro

#macro MGET %registerpointer, %memorypointer
DYNMGET %1, %2
#endmacro
#macro MGET %registerpointer, %address
DYNMGETA %1, %2
#endmacro
#macro MGET %register, %memorypointer
DYNMGETB %1, %2
#endmacro
#macro MGET %registerpointer, %variablepointer
DYNMGET %1, %2
#endmacro
#macro MGET %registerpointer, %variable
DYNMGETA %1, %2
#endmacro
#macro MGET %register, %variablepointer
DYNMGETB %1, %2
#endmacro

#macro MSET %memorypointer, %registerpointer
DYNMSET %1, %2
#endmacro
#macro MSET %memorypointer, %register
DYNMSETA %1, %2
#endmacro
#macro MSET %address, %registerpointer
DYNMSETB %1, %2
#endmacro
#macro MSET %variablepointer, %registerpointer
DYNMSET %1, %2
#endmacro
#macro MSET %variablepointer, %register
DYNMSETA %1, %2
#endmacro
#macro MSET %variable, %registerpointer
DYNMSETB %1, %2
#endmacro

#mcro AND %registerpointer, %registerpointer
DYNAND %1, %2
#endmacro
#macro AND %registerpointer, %register
DYNANDA %1, %2
#endmacro
#macro AND %register, %registerpointer
DYNANDB %1, %2
#endmacro

#macro OR %registerpointer, %registerpointer
DYNOR %1, %2
#endmacro
#macro OR %registerpointer, %register
DYNORA %1, %2
#endmacro
#macro OR %register, %registerpointer
DYNORB %1, %2
#endmacro

#macro NOT %registerpointer
DYNNOT %1
#endmacro

#macro SHL %registerpointer
DYNSHL %1
#endmacro

#macro SHR %registerpointer
DYNSHR %1
#endmacro